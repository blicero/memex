# -*- mode: org; fill-column: 78; -*-
# Time-stamp: <2023-10-10 22:05:39 krylon>
#
#+TAGS: go(g) internals(i) ui(u) bug(b) feature(f)
#+TAGS: database(d) design(e), meditation(m)
#+TAGS: optimize(o) refactor(r) cleanup(c)
#+TODO: TODO(t)  RESEARCH(r) IMPLEMENT(i) TEST(e) | DONE(d) FAILED(f) CANCELLED(c)
#+TODO: MEDITATE(m) PLANNING(p) | SUSPENDED(s)
#+PRIORITIES: A G D

Memex is an application to create an index over a collection of
images, trying to extract any text from the images to use in the
index.

* Clock
  #+BEGIN: clocktable :scope file :maxlevel 202 :emphasize t
  #+CAPTION: Clock summary at [2023-10-10 Di 22:05]
  | Headline             | Time      |         |
  |----------------------+-----------+---------|
  | *Total time*         | *1d 7:01* |         |
  |----------------------+-----------+---------|
  | *Components [0/0]*   | *1d 7:01* |         |
  | \_  /Common [0/0]/   |           | /2:29/  |
  | \_  /Scanner [0/0]/  |           | /6:03/  |
  | \_  /Reader [0/0]/   |           | /4:17/  |
  | \_  /Database [0/0]/ |           | /13:56/ |
  | \_  /CLI [0/0]/      |           | /4:16/  |
  #+END:
* Components [0/0]
  :PROPERTIES:
  :COOKIE_DATA: todo recursive
  :VISIBILITY: children
  :END:
** Common [0/0]
   :LOGBOOK:
   CLOCK: [2023-10-07 Sa 16:48]--[2023-10-07 Sa 18:49] =>  2:01
   CLOCK: [2023-10-07 Sa 12:20]--[2023-10-07 Sa 12:48] =>  0:28
   :END:
** Scanner [0/0]
   :LOGBOOK:
   CLOCK: [2023-10-04 Mi 17:53]--[2023-10-04 Mi 19:53] =>  2:00
   CLOCK: [2023-09-30 Sa 18:15]--[2023-09-30 Sa 22:18] =>  4:03
   :END:
** Reader [0/0]
   :LOGBOOK:
   CLOCK: [2023-10-04 Mi 20:19]--[2023-10-05 Do 00:36] =>  4:17
   :END:
   Okay, the API offered by pytesseract is fortunately stupid easy.
** Database [0/0]
   :LOGBOOK:
   CLOCK: [2023-10-08 So 21:05]--[2023-10-08 So 21:58] =>  0:53
   CLOCK: [2023-10-07 Sa 19:52]--[2023-10-07 Sa 22:52] =>  3:00
   CLOCK: [2023-10-06 Fr 19:25]--[2023-10-07 Sa 00:19] =>  4:54
   CLOCK: [2023-10-05 Do 19:37]--[2023-10-06 Fr 00:46] =>  5:09
   :END:
   Coming back from years of golang, I am disappointed Python's dbapi won't
   let me explicitly prepare queries. In Go, I used to test my SQL queries for
   syntax errors this way, without actually touching the database.
** CLI [0/0]
   :LOGBOOK:
   CLOCK: [2023-10-10 Di 17:49]--[2023-10-10 Di 22:05] =>  4:16
   :END:
   Eventually, I want to
* Bugs [0/0]
  :PROPERTIES:
  :COOKIE_DATA: todo recursive
  :VISIBILITY: children
  :END:


